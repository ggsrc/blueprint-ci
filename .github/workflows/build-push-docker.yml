name: Build & Push Docker

on:
  workflow_call:
    inputs:
      image-name:
        description: "Name of the Docker image (e.g., org/app)"
        required: true
        type: string
      commit-sha:
        description: "Commit SHA to tag the Docker image with"
        required: true
        type: string
    outputs:
      image-sha-tag:
        description: "The SHA tag of the pushed Docker image"
        value: ${{ jobs.build-and-push-image.outputs.image-sha-tag }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    outputs:
      image-sha-tag: ${{ steps.set-outputs.outputs.image-sha-tag }}
    steps:
      - name: Check out source repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced in a subsequent step. The `images` value provides the base name for the tags and labels.
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ inputs.image-name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      # This step uses the `docker/build-push-action` action to build the image, based on your repository's `Dockerfile`. If the build succeeds, it pushes the image to GitHub Packages.
      # It uses the `context` parameter to define the build's context as the set of files located in the specified path. For more information, see "[Usage](https://github.com/docker/build-push-action#usage)" in the README of the `docker/build-push-action` repository.
      # It uses the `tags` and `labels` parameters to tag and label the image with the output from the "meta" step.
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set outputs
        id: set-outputs
        run: |
          # Extract the image with SHA tag
          FULL_SHA_TAG=$(echo "${{ steps.meta.outputs.tags }}" | grep "sha-" | head -n 1)
          # Extract just the tag portion after the colon
          SHA_TAG=$(echo "$FULL_SHA_TAG" | cut -d':' -f2)
          echo "image-sha-tag=${SHA_TAG}" >> $GITHUB_OUTPUT
          echo "Image SHA tag: ${SHA_TAG}"
